{"version":3,"sources":["firebase_config.js","TodoListItem.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","TodoListItem","todo","iscompleted","id","style","display","ListItem","ListItemText","primary","secondary","Button","onClick","collection","doc","update","delete","color","App","useState","todos","setTodos","setTodo","useEffect","onSnapshot","querySnapshot","docs","map","data","className","TextField","label","value","onChange","e","target","console","log","maxWidth","type","variant","preventDefault","add","time","FieldValue","serverTimestamp","margin","disabled","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAWAA,IAASC,cATc,CACnBC,OAAQ,0CACRC,WAAY,qCACZC,UAAW,qBACXC,cAAe,iCACfC,kBAAmB,cACnBC,MAAO,6CAKX,IAAMC,EAAKR,IAASS,Y,QCiBLC,MA3Bf,YAAkD,IAA1BC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,YAAaC,EAAM,EAANA,GAazC,OACE,sBAAKC,MAAO,CAAEC,QAAS,QAAvB,UACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,QAASP,EACTQ,UAAWP,EAAc,OAAS,cAGtC,cAACQ,EAAA,EAAD,CAAQC,QAlBZ,WACEb,EAAGc,WAAW,SAASC,IAAIV,GAAIW,OAAO,CACpCZ,aAAcA,KAgBd,SAA0BA,EAAc,SAAW,SACnD,cAACQ,EAAA,EAAD,CAAQC,QAbZ,WACEb,EAAGc,WAAW,SAASC,IAAIV,GAAIY,UAYEC,MAAM,YAArC,wBC8DSC,MAhFf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwBF,mBAAS,IAAjC,mBAAOjB,EAAP,KAAaoB,EAAb,KAmCA,OApBAC,qBAAU,WAZRxB,EAAGc,WAAW,SAASW,YAAW,SAAUC,GAC1CJ,EACEI,EAAcC,KAAKC,KAAI,SAACb,GAAD,MAAU,CAC/BV,GAAIU,EAAIV,GACRF,KAAMY,EAAIc,OAAO1B,KACjBC,YAAaW,EAAIc,OAAOzB,sBAS7B,IAmBD,sBAAK0B,UAAU,MAAf,UACE,+DACA,iCACE,cAACC,EAAA,EAAD,CACE1B,GAAG,iBACH2B,MAAM,WACNC,MAAO9B,EACP+B,SAAU,SAACC,GACTZ,EAAQY,EAAEC,OAAOH,OACjBI,QAAQC,IAAIH,EAAEC,OAAOH,QAEvB3B,MAAO,CAAEiC,SAAU,WAGrB,cAAC3B,EAAA,EAAD,CACE4B,KAAK,SACLC,QAAQ,YACRvB,MAAM,YACNL,QAnCQ,SAACsB,GAEfA,EAAEO,iBACFL,QAAQC,IAAI,eAGZtC,EAAGc,WAAW,SAAS6B,IAAI,CACzBvC,aAAa,EACbwC,KAAMpD,IAASS,UAAU4C,WAAWC,kBACpC3C,KAAMA,IAIRoB,EAAQ,KAuBFjB,MAAO,CACLyC,OAAQ,aAEVC,UAAW7C,EARb,yBAeF,qBAAK2B,UAAU,QAAf,SACGT,EAAMO,KAAI,SAACzB,GAAD,OACT,cAAC,EAAD,CACEA,KAAMA,EAAKA,KACXC,YAAaD,EAAKC,YAClBC,GAAIF,EAAKE,cCzErB4C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.77d49956.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDurHH0-owRB3WKfDk-SIgrhdmeiDGKLbE\",\r\n    authDomain: \"reactjs-todo-ffec7.firebaseapp.com\",\r\n    projectId: \"reactjs-todo-ffec7\",\r\n    storageBucket: \"reactjs-todo-ffec7.appspot.com\",\r\n    messagingSenderId: \"64488125922\",\r\n    appId: \"1:64488125922:web:824f1084ec01cc0f62f5bb\"\r\n  };\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore()\r\n\r\nexport {db};","import React from \"react\";\r\nimport { Button, ListItem, ListItemText } from \"@material-ui/core\";\r\nimport { db } from \"./firebase_config\";\r\nfunction TodoListItem({ todo, iscompleted, id }) {\r\n\r\n\r\n  function update() {\r\n    db.collection(\"todos\").doc(id).update({\r\n      iscompleted: !iscompleted,\r\n    });\r\n  }\r\n\r\n  function deleteTodo() {\r\n    db.collection(\"todos\").doc(id).delete();\r\n  }\r\n\r\n  return (\r\n    <div style={{ display: \"flex\" }}>\r\n      <ListItem>\r\n        <ListItemText\r\n          primary={todo}\r\n          secondary={iscompleted ? \"Done\" : \"Pending\"}\r\n        />\r\n      </ListItem>\r\n      <Button onClick={update}>{iscompleted ? \"Undone\" : \"Done\"}</Button>\r\n      <Button onClick={deleteTodo}   color=\"secondary\">Delete</Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoListItem;\r\n","import \"./App.css\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport { useState, useEffect } from \"react\";\nimport  TodoListItem from \"./TodoListItem\";\nimport { db } from \"./firebase_config\";\nimport firebase from \"firebase\";\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [todo, setTodo] = useState(\"\");\n\n  const gettodos = () => {\n    db.collection(\"todos\").onSnapshot(function (querySnapshot) {\n      setTodos(\n        querySnapshot.docs.map((doc) => ({\n          id: doc.id,\n          todo: doc.data().todo,\n          iscompleted: doc.data().iscompleted,\n        }))\n      );\n    });\n  };\n\n  // Get all Data\n  useEffect(() => {\n    gettodos();\n  }, []); // Runs on first launch\n\n  const addTodo = (e) => {\n    // Prevent Reload\n    e.preventDefault();\n    console.log(\"Form Submit\");\n\n    // Add to DB\n    db.collection(\"todos\").add({\n      iscompleted: false,\n      time: firebase.firestore.FieldValue.serverTimestamp(),\n      todo: todo,\n    });\n\n    // Set Field Blank\n    setTodo(\"\");\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>ReactJS Todo App ðŸ˜Ž</h1>\n      <form>\n        <TextField\n          id=\"standard-basic\"\n          label=\"Add work\"\n          value={todo}\n          onChange={(e) => {\n            setTodo(e.target.value);\n            console.log(e.target.value);\n          }}\n          style={{ maxWidth: \"300px\" }}\n        />\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={addTodo}\n          style={{\n            margin: \"10px 30px\",\n          }}\n          disabled={!todo}\n        >\n          Add Todo\n        </Button>\n      </form>\n\n      {/* Data Shows */}\n      <div className=\"todos\">\n        {todos.map((todo) => (\n          <TodoListItem\n            todo={todo.todo}\n            iscompleted={todo.iscompleted}\n            id={todo.id}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}